---
name: Auto Release
on:
  pull_request:
    types: [closed]
    branches:
      - master

permissions:
  contents: write
  pull-requests: read

jobs:
  auto_release:
    name: Auto Release
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: --version

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Determine Next Version
        id: version
        run: |
          set -e
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LATEST_VERSION=${LATEST_TAG#v}
          IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_VERSION"
          NEXT_PATCH=$((VERSION_PARTS[2] + 1))
          NEXT_VERSION="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$NEXT_PATCH"
          echo "Latest tag: $LATEST_TAG"
          echo "Next version: $NEXT_VERSION"
          echo "next_version=$NEXT_VERSION" >> "$GITHUB_OUTPUT"

      - name: Create Tag
        run: |
          NEXT_VERSION="${{ steps.version.outputs.next_version }}"
          git tag "$NEXT_VERSION"
          git push origin "$NEXT_VERSION"
          echo "Created and pushed tag $NEXT_VERSION"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
